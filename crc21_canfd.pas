unit crc21_canfd;
//CRC-21 CAN-FD
//Author: domasz
//Version: 0.1 (2022-11-17)
//Licence: MIT

interface

uses SysUtils, HasherBase;

type THashercrc21_canfd = class(THasherbase)
  private
    FHash: Cardinal;
  public
    constructor Create; override;
    procedure Update(Msg: PByte; Length: Integer); override;
    function Final: String; override;
end;


implementation

var Table: array[0..255] of LongInt = (
$00000000, $00102899, $001079AB, $00005132, $0010DBCF, $0000F356, $0000A264, $00108AFD,
$00119F07, $0001B79E, $0001E6AC, $0011CE35, $000144C8, $00116C51, $00113D63, $000115FA,
$00131697, $00033E0E, $00036F3C, $001347A5, $0003CD58, $0013E5C1, $0013B4F3, $00039C6A,
$00028990, $0012A109, $0012F03B, $0002D8A2, $0012525F, $00027AC6, $00022BF4, $0012036D,
$001605B7, $00062D2E, $00067C1C, $00165485, $0006DE78, $0016F6E1, $0016A7D3, $00068F4A,
$00079AB0, $0017B229, $0017E31B, $0007CB82, $0017417F, $000769E6, $000738D4, $0017104D,
$00051320, $00153BB9, $00156A8B, $00054212, $0015C8EF, $0005E076, $0005B144, $001599DD,
$00148C27, $0004A4BE, $0004F58C, $0014DD15, $000457E8, $00147F71, $00142E43, $000406DA,
$001C23F7, $000C0B6E, $000C5A5C, $001C72C5, $000CF838, $001CD0A1, $001C8193, $000CA90A,
$000DBCF0, $001D9469, $001DC55B, $000DEDC2, $001D673F, $000D4FA6, $000D1E94, $001D360D,
$000F3560, $001F1DF9, $001F4CCB, $000F6452, $001FEEAF, $000FC636, $000F9704, $001FBF9D,
$001EAA67, $000E82FE, $000ED3CC, $001EFB55, $000E71A8, $001E5931, $001E0803, $000E209A,
$000A2640, $001A0ED9, $001A5FEB, $000A7772, $001AFD8F, $000AD516, $000A8424, $001AACBD,
$001BB947, $000B91DE, $000BC0EC, $001BE875, $000B6288, $001B4A11, $001B1B23, $000B33BA,
$001930D7, $0009184E, $0009497C, $001961E5, $0009EB18, $0019C381, $001992B3, $0009BA2A,
$0008AFD0, $00188749, $0018D67B, $0008FEE2, $0018741F, $00085C86, $00080DB4, $0018252D,
$00086F77, $001847EE, $001816DC, $00083E45, $0018B4B8, $00089C21, $0008CD13, $0018E58A,
$0019F070, $0009D8E9, $000989DB, $0019A142, $00092BBF, $00190326, $00195214, $00097A8D,
$001B79E0, $000B5179, $000B004B, $001B28D2, $000BA22F, $001B8AB6, $001BDB84, $000BF31D,
$000AE6E7, $001ACE7E, $001A9F4C, $000AB7D5, $001A3D28, $000A15B1, $000A4483, $001A6C1A,
$001E6AC0, $000E4259, $000E136B, $001E3BF2, $000EB10F, $001E9996, $001EC8A4, $000EE03D,
$000FF5C7, $001FDD5E, $001F8C6C, $000FA4F5, $001F2E08, $000F0691, $000F57A3, $001F7F3A,
$000D7C57, $001D54CE, $001D05FC, $000D2D65, $001DA798, $000D8F01, $000DDE33, $001DF6AA,
$001CE350, $000CCBC9, $000C9AFB, $001CB262, $000C389F, $001C1006, $001C4134, $000C69AD,
$00144C80, $00046419, $0004352B, $00141DB2, $0004974F, $0014BFD6, $0014EEE4, $0004C67D,
$0005D387, $0015FB1E, $0015AA2C, $000582B5, $00150848, $000520D1, $000571E3, $0015597A,
$00075A17, $0017728E, $001723BC, $00070B25, $001781D8, $0007A941, $0007F873, $0017D0EA,
$0016C510, $0006ED89, $0006BCBB, $00169422, $00061EDF, $00163646, $00166774, $00064FED,
$00024937, $001261AE, $0012309C, $00021805, $001292F8, $0002BA61, $0002EB53, $0012C3CA,
$0013D630, $0003FEA9, $0003AF9B, $00138702, $00030DFF, $00132566, $00137454, $00035CCD,
$00115FA0, $00017739, $0001260B, $00110E92, $0001846F, $0011ACF6, $0011FDC4, $0001D55D,
$0000C0A7, $0010E83E, $0010B90C, $00009195, $00101B68, $000033F1, $000062C3, $00104A5A
);

constructor THashercrc21_canfd.Create;
begin
  inherited Create;
  FHash := 0;
  Check := '0ED841';
end;

procedure THashercrc21_canfd.Update(Msg: PByte; Length: Integer);
var i: Integer;
begin
  for i:=0 to Length-1 do begin
    FHash := (FHash shl 8) xor Table[(Msg^ xor (FHash shr 13)) and $FF];
    Inc(Msg);
  end;   
end;

function THashercrc21_canfd.Final: String;
begin
  FHash := FHash and $1FFFFF;

  Result := IntToHex(FHash, 6);
end;


initialization
  HasherList.RegisterHasher('CRC-21 CAN-FD', THashercrc21_canfd);

end.
